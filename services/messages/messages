#!/usr/local/bin/nush
(load "AgentHTTP")
(load "AgentCrypto")
(load "AgentMongoDB")
(load "AgentJSON")
(load "AgentKit")

(def oid (string) ;; MongoDB helper
     ((AgentBSONObjectID alloc) initWithString:string))

(macro redirect (location)
       `(progn (RESPONSE setStatus:303)
               (RESPONSE setValue:,location forHTTPHeader:"Location")
               "redirecting"))

(macro mongo-connect ()
       `(progn (unless (defined mongo)
                       (set mongo (AgentMongoDB new))
                       (mongo connect))))

;; this macro wraps api handlers and generates formatted responses from the results.
(macro auth (*body) ;; the body should return a (dict)
       `(progn (RESPONSE setValue:"application/xml" forHTTPHeader:"Content-Type")
               (set authorization ((REQUEST headers) Authorization:))
               (set parts (authorization componentsSeparatedByString:" "))
               (case ((parts 0) lowercaseString)
                     ("basic" (set credentials (NSString stringWithData:(NSData agent_dataWithBase64EncodedString:(parts 1))
                                                               encoding:NSUTF8StringEncoding))
                              (set parts (credentials componentsSeparatedByString:":"))
                              (set username (parts 0))
                              (set password (parts 1))
                              (mongo-connect)
                              (set account (mongo findOne:(dict username:username
                                                                password:(password agent_md5HashWithSalt:PASSWORD_SALT))
                                             inCollection:"accounts.users")))
                     ("bearer" (set secret (parts 1))
                               (mongo-connect)
                               (set account (mongo findOne:(dict secret:secret)
                                              inCollection:"accounts.users")))
                     (else (set account nil)))
               (if account
                   (then (set response (progn ,@*body)))
                   (else (RESPONSE setStatus:401)
                         (set response (dict message:"Unauthorized"))))
               (response XMLPropertyListRepresentation)))

(macro topbar ()
       (set additional-items nil)
       (topbar-for-app "Messages" additional-items))

(get "/messages"
     (authenticate)
     (set mongo (AgentMongoDB new))
     (mongo connect)
     (if screen_name
         (then (set messages (mongo findArray:(dict $query:(dict) $orderby:(dict created:-1)) inCollection:"messages.messages"))
               (htmlpage "Agent Messages"
                         (topbar)
                         (&div class:"row"
                               (&div class:"medium-8 small-12 columns"
                                     (&div (&h1 "Messages")
                                           (messages map:(do (message)
                                                             (&table style:"width:100%"
                                                                     (&tr (&td "From: ") (&td (message sender:)))
                                                                     (&tr (&td "To: ") (&td ((message message:) to:)))
                                                                     (&tr (&td "Date: ") (&td ((message created:) description)))
                                                                     (&tr (&td "Subject: ") (&td (&strong ((message message:) subject:))))
                                                                     (&tr (&td) (&td ((message message:) body:)))))))))))
         (else (redirect "/signin"))))

(post "/messages/inbox"
      (auth (mongo-connect)
            (set sender (account username:))
            (set message ((REQUEST body) propertyListValue))
            (mongo insertObject:(dict message:message sender:sender created:(NSDate date))
                 intoCollection:"messages.messages")
            (dict message:"ok")))

(files "/accounts/*path:" "public")

(get "/*path:"
     (authenticate)
     (RESPONSE setStatus:404)
     (htmlpage "Not found"
               (topbar)
               (&div class:"row"
                     (&div class:"large-12 columns"
                           (&h3 "404 Resource Not Found")
                           (&p "You wanted: #{*path}")
                           (&p "Sorry.")))))

;(AgentHTTPServer run)
(set s ((AgentLibEVHTPServer alloc) initWithService:(AgentHTTPService sharedService)))
(s setVerbose:YES)
(s run)

